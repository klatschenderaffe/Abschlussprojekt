# Ziel diese Workflows ist es die Anwendung zu testen und
# ein Image bauen zu lassen. Anschließen wird das Image auf Dockerhub gepushed.
name: Backend Image erstellen und pushen
on:
  # Wird mit einem Push auf den Branch "Main" ausgelöst.
  push:
    branches:
      - main
jobs:
  # Die Anwendung wird getestet.
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Code auschecken
  #     - name: Check out code
  #       uses: actions/checkout@v4
  #       # Node aktualisieren
  #     - name: Node aktualisieren
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #       # Zur Kontrolle
  #     - name: Dateipfade anzeigen lassen
  #       run: ls -la
  #       # Alle Abhängigkeiten installieren
  #     - name: Abhängigkeiten installieren
  #       working-directory: ./Frontend
  #       run: npm install
  #       # React Tests ausführen
  #     - name: React Test ausführung
  #       working-directory: ./Frontend
  #       run: npm run test

  # Das Image wird auf Dockerhub gepushed
  image_push:
    runs-on: ubuntu-latest
    # Hat die Abhängigkeit von dem "test" Job,
    # erst wenn dieser erfolgreich durchlief darf dieser Workflow starten.
    # needs: test
    steps:
      # build job soll den build ordner als artefakt hochladen
      # schritt 1: code auschecken
      - name: Check out code
        uses: actions/checkout@v4
      # schritt 2: node aktualisieren
      - name: Node aktualisieren
        uses: actions/setup-node@v4
        with:
          node-version: 20
      # schritt 3: Abhängigkeiten installieren
      - name: Abhängigkeiten installieren
        working-directory: ./Backend
        run: npm install

      # Set the environment variable from the secret
      - name: Create .env
        working-directory: ./Backend
        run: |
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env

      # Schritt 3: Projekt-Build bauen und Image erstellen
      - name: Docker Image erstellen und taggen
        working-directory: ./Backend
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/vanventura_backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build \
            --tag $IMAGE_NAME:$IMAGE_TAG \
            --tag $IMAGE_NAME:latest \
            .
      # Step 2: Einloggen in Dockerhub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        # Schritt 5: Docker Image pushen
      - name: Docker Image pushen
        working-directory: ./Backend
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/vanventura_backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker push $IMAGE_NAME:$IMAGE_TAG
          docker push $IMAGE_NAME:latest
